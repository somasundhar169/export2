<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PutMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PatchMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.DeleteMapping"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.databind.ObjectMapper"/>
    <fullyQualifiedTypeName name="java.util.stream.Collectors"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.Aspect"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.Before"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.JoinPoint"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.After"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.AfterReturning"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.AfterThrowing"/>
    <fullyQualifiedTypeName name="com.project.employeemanagement.exception.EmployeeNotFoundException"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.annotation.Around"/>
    <fullyQualifiedTypeName name="org.aspectj.lang.ProceedingJoinPoint"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="java.util.Optional"/>
    <fullyQualifiedTypeName name="com.project.employeemanagement.repository.EmployeeRepository"/>
    <fullyQualifiedTypeName name="org.mockito.Mock"/>
    <fullyQualifiedTypeName name="com.project.employeemanagement.entity.Employee"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeEach"/>
    <fullyQualifiedTypeName name="org.mockito.MockitoAnnotations"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.AfterEach"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="com.project.employeemanagement.dto.EmployeeRequest"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.mock.mockito.MockBean"/>
    <fullyQualifiedTypeName name="com.project.employeemanagement.service.EmployeeService"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.MockMvc"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.security.SecurityProperties.User"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.dao.DaoAuthenticationProvider"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetails"/>
    <fullyQualifiedTypeName name="com.project.customer.entity.Customer"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Enumerated"/>
    <fullyQualifiedTypeName name="jakarta.persistence.EnumType"/>
    <fullyQualifiedTypeName name="com.project.customer.repository.CustomerRepository"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.SimpleGrantedAuthority"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.project.customer.service.MyUserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.Customizer"/>
    <fullyQualifiedTypeName name="java.util.ArrayList"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="com.project.customer.enums.Roles"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
</qualifiedTypeNameHistroy>
